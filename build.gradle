plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'

    // Rest Docs & Swagger UI
    id 'com.epages.restdocs-api-spec' version '0.18.2'
    id 'org.hidetake.swagger.generator' version '2.18.2'

    // Jacoco, sonarcloud
    id 'jacoco'
    id("org.sonarqube") version "6.2.0.5505"
}

group = 'baegam'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jacoco {
    toolVersion = "0.8.12"
}

sonarqube {
    properties {
        property "sonar.projectKey", "baegam_timeeat"
        property "sonar.organization", "baegam"
        property "sonar.host.url", "https://sonarcloud.io"
        property 'sonar.sourceEncoding', 'UTF-8'
        property 'sonar.java.coveragePlugin', 'jacoco'
        property "sonar.coverage.jacoco.xmlReportPaths",
                layout.buildDirectory.file("reports/jacoco/test/jacocoTestReport.xml").get().asFile.path
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    // Spring boot
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // DB
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Test
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.rest-assured:rest-assured:5.5.0'

    // Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.18.2'
    testImplementation 'com.epages:restdocs-api-spec-restassured:0.18.2'
}

bootJar {
    dependsOn("openapi3")
}

tasks.named('test', Test) {
    outputs.dir snippetsDir
    useJUnitPlatform()
    finalizedBy tasks.jacocoTestReport
}

generateSwaggerUI {
    dependsOn("openapi3")

    delete(fileTree("src/main/resources/static/docs/") {
        exclude(".gitkeep")
    })
    copy {
        from("build/resources/main/static/docs/")
        into("src/main/resources/static/docs/")
    }
}

openapi3 {
    servers = [ // 서버 상황에 맞춰 추가 예정
            {
                url = "http://localhost:8080"
                description = "Local Server"
            }
    ]
    title = "백암 순대 API" // 수정 예정
    description = "백암 순대 API" // 수정 예정
    version = "0.0.1"
    format = "yaml"
    outputDirectory = "build/resources/main/static/docs"
}

tasks.named('jacocoTestReport', JacocoReport) {
    dependsOn test
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
    sourceDirectories.setFrom(files(sourceSets.main.allSource.srcDirs))
    classDirectories.setFrom(files(sourceSets.main.output))

    executionData.setFrom(
            layout.buildDirectory.file("jacoco/test.exec").map { it.asFile }
    )
}

