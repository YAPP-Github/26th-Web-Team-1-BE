name: Terraform Plan on PR

on:
  pull_request:
    branches:
      - main
      - develop

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  plan-common:
    name: "Terraform Plan (common)"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform/common

      - name: Terraform Plan and Capture Output
        id: plan
        working-directory: ./terraform/common
        run: |
          set +e
          terraform plan -no-color -detailed-exitcode > >(tee plan_full.txt) 2> >(tee plan_full.txt >&2)
          exit_code=$?
          set -e

          resource_summary=$(grep -E '^(# |  [~+\-])' plan_full.txt | head -n 50)
          plan_summary=$(grep -E '^Plan:' plan_full.txt)

          echo "summary_output<<EOF" >> $GITHUB_OUTPUT
          echo "$resource_summary" >> $GITHUB_OUTPUT
          echo "$plan_summary" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          if [ "$exit_code" -eq 0 ]; then
            echo "✅ Terraform plan completed with no changes."
            echo "plan_status=success" >> $GITHUB_OUTPUT
          elif [ "$exit_code" -eq 2 ]; then
            echo "✅ Terraform plan completed with changes."
            echo "plan_status=changes" >> $GITHUB_OUTPUT
          elif [ "$exit_code" -eq 1 ]; then
            echo "❌ Terraform plan failed with errors."
            echo "plan_status=error" >> $GITHUB_OUTPUT
          fi

          exit 0

      - name: Upload full plan as artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-common
          path: ./terraform/common/plan_full.txt

    outputs:
      summary_output: ${{ steps.plan.outputs.summary_output }}
      plan_status: ${{ steps.plan.outputs.plan_status }}

  plan-dev:
    name: "Terraform Plan (dev)"
    if: github.base_ref == 'develop' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform/dev

      - name: Terraform Plan and Capture Output
        id: plan
        working-directory: ./terraform/dev
        run: |
          set +e
          terraform plan -no-color -detailed-exitcode > >(tee plan_full.txt) 2> >(tee plan_full.txt >&2)
          exit_code=$?
          set -e

          resource_summary=$(grep -E '^(# |  [~+\-])' plan_full.txt | head -n 50)
          plan_summary=$(grep -E '^Plan:' plan_full.txt)

          echo "summary_output<<EOF" >> $GITHUB_OUTPUT
          echo "$resource_summary" >> $GITHUB_OUTPUT
          echo "$plan_summary" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          if [ "$exit_code" -eq 0 ]; then
            echo "✅ Terraform plan completed with no changes."
            echo "plan_status=success" >> $GITHUB_OUTPUT
          elif [ "$exit_code" -eq 2 ]; then
            echo "✅ Terraform plan completed with changes."
            echo "plan_status=changes" >> $GITHUB_OUTPUT
          elif [ "$exit_code" -eq 1 ]; then
            echo "❌ Terraform plan failed with errors."
            echo "plan_status=error" >> $GITHUB_OUTPUT
          fi

          exit 0

      - name: Upload full plan as artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-dev
          path: ./terraform/dev/plan_full.txt

    outputs:
      summary_output: ${{ steps.plan.outputs.summary_output }}
      plan_status: ${{ steps.plan.outputs.plan_status }}

  plan-prod:
    name: "Terraform Plan (prod)"
    if: github.base_ref == 'main' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform/prod

      - name: Terraform Plan and Capture Output
        id: plan
        working-directory: ./terraform/prod
        run: |
          set +e
          terraform plan -no-color -detailed-exitcode > >(tee plan_full.txt) 2> >(tee plan_full.txt >&2)
          exit_code=$?
          set -e

          resource_summary=$(grep -E '^(# |  [~+\-])' plan_full.txt | head -n 50)
          plan_summary=$(grep -E '^Plan:' plan_full.txt)

          echo "summary_output<<EOF" >> $GITHUB_OUTPUT
          echo "$resource_summary" >> $GITHUB_OUTPUT
          echo "$plan_summary" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          if [ "$exit_code" -eq 0 ]; then
            echo "✅ Terraform plan completed with no changes."
            echo "plan_status=success" >> $GITHUB_OUTPUT
          elif [ "$exit_code" -eq 2 ]; then
            echo "✅ Terraform plan completed with changes."
            echo "plan_status=changes" >> $GITHUB_OUTPUT
          elif [ "$exit_code" -eq 1 ]; then
            echo "❌ Terraform plan failed with errors."
            echo "plan_status=error" >> $GITHUB_OUTPUT
          fi

          exit 0

      - name: Upload full plan as artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-prod
          path: ./terraform/prod/plan_full.txt

    outputs:
      summary_output: ${{ steps.plan.outputs.summary_output }}
      plan_status: ${{ steps.plan.outputs.plan_status }}

  comment-summary:
    name: "Comment PR with Plan Summary"
    runs-on: ubuntu-latest
    needs: [plan-common, plan-dev, plan-prod]
    if: always()
    steps:
      - name: Comment PR with Plan Summary
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## 📄 Terraform Plan Summary

            ### 🛡️ common
            ```terraform
            ${{ needs.plan-common.outputs.summary_output }}
            ```
            **상태:** ${{ needs.plan-common.outputs.plan_status == 'error' && '❌ 실패' || needs.plan-common.outputs.plan_status == 'changes' && '🔄 변경사항 있음' || '✅ 변경 없음' }}

            ${{ needs.plan-dev.result != 'skipped' && (
            format('\n---\n\n### 🛠️ dev\n```terraform\n{0}\n```\n**상태:** {1}',
              needs.plan-dev.outputs.summary_output,
              needs.plan-dev.outputs.plan_status == 'error' && '❌ 실패' || needs.plan-dev.outputs.plan_status == 'changes' && '🔄 변경사항 있음' || '✅ 변경 없음'
            )
            ) || '' }}

            ${{ needs.plan-prod.result != 'skipped' && (
            format('\n---\n\n### 🚀 prod\n```terraform\n{0}\n```\n**상태:** {1}',
              needs.plan-prod.outputs.summary_output,
              needs.plan-prod.outputs.plan_status == 'error' && '❌ 실패' || needs.plan-prod.outputs.plan_status == 'changes' && '🔄 변경사항 있음' || '✅ 변경 없음'
            )
            ) || '' }}

            ---

            전체 Terraform Plan 결과는 [GitHub Actions Artifact](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})에서 확인할 수 있습니다.

      - name: Fail job if any plan failed
        if: |
          needs.plan-common.outputs.plan_status == 'error' ||
          (needs.plan-dev.result != 'skipped' && needs.plan-dev.outputs.plan_status == 'error') ||
          (needs.plan-prod.result != 'skipped' && needs.plan-prod.outputs.plan_status == 'error')
        run: exit 1
